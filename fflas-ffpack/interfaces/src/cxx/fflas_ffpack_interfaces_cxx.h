/* ------------------------------------------------------------------ -*- c++ -*-
 *
 * (c) SILKAN           - 2014-2016
 *     Generated by the 'ffinterg' tool (v0.4)
 *
 * ========LICENCE========
 * This file is part of the library FFLAS-FFPACK.
 *
 * FFLAS-FFPACK is free software: you can redistribute it and/or modify
 * it under the terms of the  GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 * ========LICENCE========
 */

void ff_fadd(int32_t, size_t, const int32_t*, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fadd(int64_t, size_t, const int64_t*, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fadd(Integer, size_t, const Integer*, size_t, const Integer*, size_t, Integer*, size_t);
void ff_fadd(float, size_t, const float*, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fadd(double, size_t, const double*, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_fadd(int32_t, size_t, size_t, const int32_t*, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fadd(int64_t, size_t, size_t, const int64_t*, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fadd(Integer, size_t, size_t, const Integer*, size_t, const Integer*, size_t, Integer*, size_t);
void ff_fadd(float, size_t, size_t, const float*, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fadd(double, size_t, size_t, const double*, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_fadd(int32_t, size_t, const int32_t*, size_t, int32_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fadd(int64_t, size_t, const int64_t*, size_t, int64_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fadd(Integer, size_t, const Integer*, size_t, Integer, const Integer*, size_t, Integer*, size_t);
void ff_fadd(float, size_t, const float*, size_t, float, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fadd(double, size_t, const double*, size_t, double, const double*, size_t, double*, size_t, FP_C_RP);
void ff_fadd(int32_t, size_t, size_t, const int32_t*, size_t, int32_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fadd(int64_t, size_t, size_t, const int64_t*, size_t, int64_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fadd(Integer, size_t, size_t, const Integer*, size_t, Integer, const Integer*, size_t, Integer*, size_t);
void ff_fadd(float, size_t, size_t, const float*, size_t, float, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fadd(double, size_t, size_t, const double*, size_t, double, const double*, size_t, double*, size_t, FP_C_RP);
void ff_faxpy(int32_t, size_t, int32_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_faxpy(int64_t, size_t, int64_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_faxpy(Integer, size_t, Integer, const Integer*, size_t, Integer*, size_t);
void ff_faxpy(float, size_t, float, const float*, size_t, float*, size_t, FP_C_RP);
void ff_faxpy(double, size_t, double, const double*, size_t, double*, size_t, FP_C_RP);
void ff_faxpy(int32_t, size_t, size_t, int32_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_faxpy(int64_t, size_t, size_t, int64_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_faxpy(Integer, size_t, size_t, Integer, const Integer*, size_t, Integer*, size_t);
void ff_faxpy(float, size_t, size_t, float, const float*, size_t, float*, size_t, FP_C_RP);
void ff_faxpy(double, size_t, size_t, double, const double*, size_t, double*, size_t, FP_C_RP);
int32_t ff_fdot(int32_t, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
int64_t ff_fdot(int64_t, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
Integer ff_fdot(Integer, size_t, const Integer*, size_t, Integer*, size_t);
float ff_fdot(float, size_t, const float*, size_t, float*, size_t, FP_C_RP);
double ff_fdot(double, size_t, const double*, size_t, double*, size_t, FP_C_RP);
bool ff_fequal(int32_t, size_t, const int32_t*, size_t, const int32_t*, size_t, FP_C_RP);
bool ff_fequal(int64_t, size_t, const int64_t*, size_t, const int64_t*, size_t, FP_C_RP);
bool ff_fequal(Integer, size_t, const Integer*, size_t, const Integer*, size_t);
bool ff_fequal(float, size_t, const float*, size_t, const float*, size_t, FP_C_RP);
bool ff_fequal(double, size_t, const double*, size_t, const double*, size_t, FP_C_RP);
bool ff_fequal(int32_t, size_t, size_t, const int32_t*, size_t, const int32_t*, size_t, FP_C_RP);
bool ff_fequal(int64_t, size_t, size_t, const int64_t*, size_t, const int64_t*, size_t, FP_C_RP);
bool ff_fequal(Integer, size_t, size_t, const Integer*, size_t, const Integer*, size_t);
bool ff_fequal(float, size_t, size_t, const float*, size_t, const float*, size_t, FP_C_RP);
bool ff_fequal(double, size_t, size_t, const double*, size_t, const double*, size_t, FP_C_RP);
void ff_fgemm(int32_t, FFLAS_C_TRANSPOSE, FFLAS_C_TRANSPOSE, size_t, size_t, size_t, int32_t, const int32_t*, size_t, const int32_t*, size_t, int32_t, int32_t*, size_t, FP_C_RP);
void ff_fgemm(int64_t, FFLAS_C_TRANSPOSE, FFLAS_C_TRANSPOSE, size_t, size_t, size_t, int64_t, const int64_t*, size_t, const int64_t*, size_t, int64_t, int64_t*, size_t, FP_C_RP);
void ff_fgemm(Integer, FFLAS_C_TRANSPOSE, FFLAS_C_TRANSPOSE, size_t, size_t, size_t, Integer, const Integer*, size_t, const Integer*, size_t, Integer, Integer*, size_t);
void ff_fgemm(float, FFLAS_C_TRANSPOSE, FFLAS_C_TRANSPOSE, size_t, size_t, size_t, float, const float*, size_t, const float*, size_t, float, float*, size_t, FP_C_RP);
void ff_fgemm(double, FFLAS_C_TRANSPOSE, FFLAS_C_TRANSPOSE, size_t, size_t, size_t, double, const double*, size_t, const double*, size_t, double, double*, size_t, FP_C_RP);
void ff_fgemv(int32_t, FFLAS_C_TRANSPOSE, size_t, size_t, int32_t, const int32_t*, size_t, const int32_t*, size_t, int32_t, int32_t*, size_t, FP_C_RP);
void ff_fgemv(int64_t, FFLAS_C_TRANSPOSE, size_t, size_t, int64_t, const int64_t*, size_t, const int64_t*, size_t, int64_t, int64_t*, size_t, FP_C_RP);
void ff_fgemv(Integer, FFLAS_C_TRANSPOSE, size_t, size_t, Integer, const Integer*, size_t, const Integer*, size_t, Integer, Integer*, size_t);
void ff_fgemv(float, FFLAS_C_TRANSPOSE, size_t, size_t, float, const float*, size_t, const float*, size_t, float, float*, size_t, FP_C_RP);
void ff_fgemv(double, FFLAS_C_TRANSPOSE, size_t, size_t, double, const double*, size_t, const double*, size_t, double, double*, size_t, FP_C_RP);
void ff_fger(int32_t, size_t, size_t, int32_t, int32_t*, size_t, int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fger(int64_t, size_t, size_t, int64_t, int64_t*, size_t, int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fger(float, size_t, size_t, float, float*, size_t, float*, size_t, float*, size_t, FP_C_RP);
void ff_fger(double, size_t, size_t, double, double*, size_t, double*, size_t, double*, size_t, FP_C_RP);
bool ff_fiszero(int32_t, size_t, const int32_t*, size_t, FP_C_RP);
bool ff_fiszero(int64_t, size_t, const int64_t*, size_t, FP_C_RP);
bool ff_fiszero(Integer, size_t, const Integer*, size_t);
bool ff_fiszero(float, size_t, const float*, size_t, FP_C_RP);
bool ff_fiszero(double, size_t, const double*, size_t, FP_C_RP);
bool ff_fiszero(int32_t, size_t, size_t, const int32_t*, size_t, FP_C_RP);
bool ff_fiszero(int64_t, size_t, size_t, const int64_t*, size_t, FP_C_RP);
bool ff_fiszero(Integer, size_t, size_t, const Integer*, size_t);
bool ff_fiszero(float, size_t, size_t, const float*, size_t, FP_C_RP);
bool ff_fiszero(double, size_t, size_t, const double*, size_t, FP_C_RP);
void ff_fneg(int32_t, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fneg(int64_t, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fneg(Integer, size_t, const Integer*, size_t, Integer*, size_t);
void ff_fneg(float, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fneg(double, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_fneg(int32_t, size_t, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fneg(int64_t, size_t, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fneg(Integer, size_t, size_t, const Integer*, size_t, Integer*, size_t);
void ff_fneg(float, size_t, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fneg(double, size_t, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_freduce(int32_t, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_freduce(int64_t, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_freduce(Integer, size_t, const Integer*, size_t, Integer*, size_t);
void ff_freduce(float, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_freduce(double, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_freduce(int32_t, size_t, size_t, int32_t*, size_t, FP_C_RP);
void ff_freduce(int64_t, size_t, size_t, int64_t*, size_t, FP_C_RP);
void ff_freduce(Integer, size_t, size_t, Integer*, size_t);
void ff_freduce(float, size_t, size_t, float*, size_t, FP_C_RP);
void ff_freduce(double, size_t, size_t, double*, size_t, FP_C_RP);
void ff_fscal(int32_t, size_t, int32_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fscal(int64_t, size_t, int64_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fscal(Integer, size_t, Integer, const Integer*, size_t, Integer*, size_t);
void ff_fscal(float, size_t, float, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fscal(double, size_t, double, const double*, size_t, double*, size_t, FP_C_RP);
void ff_fscal(int32_t, size_t, size_t, int32_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fscal(int64_t, size_t, size_t, int64_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fscal(Integer, size_t, size_t, Integer, const Integer*, size_t, Integer*, size_t);
void ff_fscal(float, size_t, size_t, float, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fscal(double, size_t, size_t, double, const double*, size_t, double*, size_t, FP_C_RP);
void ff_fsquare(int32_t, FFLAS_C_TRANSPOSE, size_t, int32_t, const int32_t*, size_t, int32_t, int32_t*, size_t, FP_C_RP);
void ff_fsquare(int64_t, FFLAS_C_TRANSPOSE, size_t, int64_t, const int64_t*, size_t, int64_t, int64_t*, size_t, FP_C_RP);
void ff_fsquare(Integer, FFLAS_C_TRANSPOSE, size_t, Integer, const Integer*, size_t, Integer, Integer*, size_t);
void ff_fsquare(float, FFLAS_C_TRANSPOSE, size_t, float, const float*, size_t, float, float*, size_t, FP_C_RP);
void ff_fsquare(double, FFLAS_C_TRANSPOSE, size_t, double, const double*, size_t, double, double*, size_t, FP_C_RP);
void ff_fsub(int32_t, size_t, const int32_t*, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fsub(int64_t, size_t, const int64_t*, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fsub(Integer, size_t, const Integer*, size_t, const Integer*, size_t, Integer*, size_t);
void ff_fsub(float, size_t, const float*, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fsub(double, size_t, const double*, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_fsub(int32_t, size_t, size_t, const int32_t*, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_fsub(int64_t, size_t, size_t, const int64_t*, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_fsub(Integer, size_t, size_t, const Integer*, size_t, const Integer*, size_t, Integer*, size_t);
void ff_fsub(float, size_t, size_t, const float*, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_fsub(double, size_t, size_t, const double*, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_ftrmm(int32_t, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, int32_t, int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_ftrmm(int64_t, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, int64_t, int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_ftrmm(Integer, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, Integer, Integer*, size_t, Integer*, size_t, FP_C_RP);
void ff_ftrmm(float, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, float, float*, size_t, float*, size_t, FP_C_RP);
void ff_ftrmm(double, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, double, double*, size_t, double*, size_t, FP_C_RP);
void ff_ftrsm(int32_t, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, int32_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_ftrsm(int64_t, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, int64_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_ftrsm(Integer, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, Integer, const Integer*, size_t, Integer*, size_t);
void ff_ftrsm(float, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, float, const float*, size_t, float*, size_t, FP_C_RP);
void ff_ftrsm(double, FFLAS_C_SIDE, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, size_t, double, const double*, size_t, double*, size_t, FP_C_RP);
void ff_ftrsv(int32_t, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, const int32_t*, size_t, int32_t*, size_t, FP_C_RP);
void ff_ftrsv(int64_t, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, const int64_t*, size_t, int64_t*, size_t, FP_C_RP);
void ff_ftrsv(Integer, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, const Integer*, size_t, Integer*, size_t);
void ff_ftrsv(float, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, const float*, size_t, float*, size_t, FP_C_RP);
void ff_ftrsv(double, FFLAS_C_UPLO, FFLAS_C_TRANSPOSE, FFLAS_C_DIAG, size_t, const double*, size_t, double*, size_t, FP_C_RP);
void ff_pfadd(int32_t, size_t, size_t, const int32_t*, size_t, const int32_t*, size_t, int32_t*, size_t, int, FP_C_RP);
void ff_pfadd(int64_t, size_t, size_t, const int64_t*, size_t, const int64_t*, size_t, int64_t*, size_t, int, FP_C_RP);
void ff_pfadd(Integer, size_t, size_t, const Integer*, size_t, const Integer*, size_t, Integer*, size_t, int);
void ff_pfadd(float, size_t, size_t, const float*, size_t, const float*, size_t, float*, size_t, int, FP_C_RP);
void ff_pfadd(double, size_t, size_t, const double*, size_t, const double*, size_t, double*, size_t, int, FP_C_RP);
void ff_pfsub(int32_t, size_t, size_t, const int32_t*, size_t, const int32_t*, size_t, int32_t*, size_t, int, FP_C_RP);
void ff_pfsub(int64_t, size_t, size_t, const int64_t*, size_t, const int64_t*, size_t, int64_t*, size_t, int, FP_C_RP);
void ff_pfsub(Integer, size_t, size_t, const Integer*, size_t, const Integer*, size_t, Integer*, size_t, int);
void ff_pfsub(float, size_t, size_t, const float*, size_t, const float*, size_t, float*, size_t, int, FP_C_RP);
void ff_pfsub(double, size_t, size_t, const double*, size_t, const double*, size_t, double*, size_t, int, FP_C_RP);
