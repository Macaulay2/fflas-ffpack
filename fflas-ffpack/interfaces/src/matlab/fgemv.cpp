/* ------------------------------------------------------------------ -*- c++ -*-
 *
 * (c) SILKAN           - 2014-2016
 * (c) ANR Project HPAC -  Generated by the 'ffinterg' tool (v0.4)
 *
 */

#include "ffintert_matlab.h"
int ff_fgemv_0(double, ffintert::FlagTrans, size_t, size_t, double, ffintert::Matrix<double>, size_t, ffintert::Vector<double>, size_t, double, ffintert::Vector<double>, size_t);



/* -------------------------------------------------------------------------- */

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
  if ((((((((nrhs == 6) && ffintert::isField(prhs[0])) && ffintert::isElement(prhs[1])) && (ffintert::isMatrix(prhs[2]) && ffintert::isElement(prhs[2]))) && (ffintert::isVector(prhs[3]) && ffintert::isElement(prhs[3]))) && ffintert::isElement(prhs[4])) && (ffintert::isVector(prhs[5]) && ffintert::isElement(prhs[5])))) {
    double F = ffintert::getField(prhs[0]);
    double alpha = ffintert::getElement(prhs[1]);
    ffintert::Matrix<double> A = ffintert::getMatrix(prhs[2]);
    ffintert::Vector<double> X = ffintert::getVector(prhs[3]);
    double beta = ffintert::getElement(prhs[4]);
    ffintert::Vector<double> Y = ffintert::duplicateVector(prhs[5], plhs[0]);
    size_t m = ffintert::rows(A);
    size_t n = ffintert::cols(A);
    ffintert::check(n, ffintert::length(X), "n");
    ffintert::check(m, ffintert::length(Y), "m");
    ffintert::FlagTrans _tmp_0 = ffintert::Trans;
    size_t _tmp_1 = ffintert::ld(A);
    size_t _tmp_2 = ffintert::st(X);
    size_t _tmp_3 = ffintert::st(Y);
    ff_fgemv_0(F, _tmp_0, n, m, alpha, A, _tmp_1, X, _tmp_2, beta, Y, _tmp_3);
  } else {
    ffintert::error("wrong arguments types (or number) for routine: fgemv.");
  }  
}

